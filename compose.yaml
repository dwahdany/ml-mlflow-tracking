services:
    # PostgreSQL database
    postgres:
        image: postgres:16.6
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: mlflowdb
        # ports:
        #     - 5432:5432
        networks:
            - backend
        # volumes:
        #     - /raid/${USER}/mlflow/db:/var/lib/postgresql/data
        restart: unless-stopped
    # MinIO server
    minio:
        image: minio/minio
        # expose:
        #     - "9000"
        ports:
        #     - "9000:9000"
            # MinIO Console is available at http://localhost:9001
            - "9001:9001"
        networks:
            - backend
            # - frontend
        # volumes:
        #     - /raid/${USER}/mlflow/minio:/data
        environment:
            MINIO_ROOT_USER: "minio_user"
            MINIO_ROOT_PASSWORD: "minio_password"
        healthcheck:
            test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
            interval: 1s
            timeout: 10s
            retries: 5
        command: server /data --console-address ":9001"
        restart: unless-stopped
        # Create a bucket named "bucket" if it doesn't exist
    minio-create-bucket:
        image: minio/mc
        networks:
            - backend
        depends_on:
            minio:
                condition: service_healthy
        entrypoint: >
            bash -c "
            mc alias set minio http://minio:9000 minio_user minio_password &&
            if ! mc ls minio | grep --quiet bucket; then
                mc mb minio/bucket
            else
                echo 'bucket already exists'
            fi
            "
    mlflow:
        image: "ghcr.io/dwahdany/ml-mlflow-tracking:go-latest"
        networks:
            - backend
            - frontend
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=minio_user
            - AWS_SECRET_ACCESS_KEY=minio_password
        restart: unless-stopped
        command:
            [
                "--backend-store-uri",
                "postgresql://user:password@postgres:5432/mlflowdb",
                "--artifacts-destination",
                "s3://bucket"
            ]
    # Nginx reverse proxy for MinIO Console
    # minio-proxy:
    #     image: nginx:latest
    #     ports:
    #         - "9001:80"
    #     networks:
    #         - backend
    #         - frontend
    #     depends_on:
    #         - minio
    #     volumes:
    #         - ./nginx.conf:/etc/nginx/nginx.conf:ro
    #     restart: unless-stopped

    # Database upgrade service (only runs when explicitly called with --profile db-upgrade)
    mlflow-upgrade:
        profiles:
            - db-upgrade
        image: "ghcr.io/dwahdany/ml-mlflow-tracking:go-latest"
        networks:
            - backend
        depends_on:
            - postgres
        entrypoint: ["mlflow-go"]
        command: db upgrade postgresql://user:password@postgres:5432/mlflowdb
