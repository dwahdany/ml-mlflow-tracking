name: Update MLflow Version

on:
    schedule:
        # Check for new MLflow releases daily at 1 AM UTC
        - cron: "0 1 * * *"
    workflow_dispatch:

jobs:
    check-and-update:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Check for new MLflow version
              id: check
              run: |
                  # Get the latest MLflow version from PyPI
                  LATEST_VERSION=$(curl -s https://pypi.org/pypi/mlflow/json | jq -r '.info.version')

                  # Get current version from the workflow file
                  CURRENT_VERSION=$(grep -o 'MLFLOW_VERSION: [0-9.]*' .github/workflows/docker-build.yml | cut -d' ' -f2)

                  echo "Latest MLflow version: $LATEST_VERSION"
                  echo "Current version: $CURRENT_VERSION"

                  if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
                    echo "needs-update=true" >> $GITHUB_OUTPUT
                    echo "latest-version=$LATEST_VERSION" >> $GITHUB_OUTPUT
                    echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
                    echo "New MLflow version detected: $LATEST_VERSION"
                  else
                    echo "needs-update=false" >> $GITHUB_OUTPUT
                    echo "No new MLflow version"
                  fi

            - name: Update MLflow version
              if: steps.check.outputs.needs-update == 'true'
              run: |
                  # Update the version in the workflow file
                  sed -i "s/MLFLOW_VERSION: ${{ steps.check.outputs.current-version }}/MLFLOW_VERSION: ${{ steps.check.outputs.latest-version }}/g" .github/workflows/docker-build.yml

            - name: Create Pull Request
              if: steps.check.outputs.needs-update == 'true'
              id: create-pr
              uses: peter-evans/create-pull-request@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "Update MLflow version to ${{ steps.check.outputs.latest-version }}"
                  title: "Update MLflow version to ${{ steps.check.outputs.latest-version }}"
                  body: |
                      This PR updates the MLflow version from ${{ steps.check.outputs.current-version }} to ${{ steps.check.outputs.latest-version }}.

                      ## Changes
                      - Updated `MLFLOW_VERSION` in `.github/workflows/docker-build.yml`

                      ## Release Notes
                      You can find the release notes for MLflow ${{ steps.check.outputs.latest-version }} at:
                      https://github.com/mlflow/mlflow/releases/tag/v${{ steps.check.outputs.latest-version }}

                      This PR was automatically created by the update workflow.
                  branch: update-mlflow-${{ steps.check.outputs.latest-version }}
                  delete-branch: true

            - name: Auto-merge Pull Request
              if: steps.check.outputs.needs-update == 'true' && steps.create-pr.outputs.pull-request-number
              run: |
                  # Wait a moment for the PR to be fully created
                  sleep 5

                  # Auto-merge the PR
                  gh pr merge ${{ steps.create-pr.outputs.pull-request-number }} --auto --squash
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
