name: Build Docker image

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-mlflow:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      MLFLOW_VERSION: 2.22.0
      CACHE_PATH: /tmp/.buildx-cache-mlflow
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Cache Docker layers (MLflow)
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-mlflow-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-mlflow-

      - name: Build and tag MLflow (Python) image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            MLFLOW_BACKEND=python
            MLFLOW_VERSION=${{ env.MLFLOW_VERSION }}
          push: ${{ env.DOCKER_PUSH == 'true' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mlflow-${{ env.MLFLOW_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}-new

      - name: Move cache (MLflow)
        run: |
          rm -rf ${{ env.CACHE_PATH }}
          mv ${{ env.CACHE_PATH }}-new ${{ env.CACHE_PATH }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            MLFLOW_BACKEND=python
            MLFLOW_VERSION=${{ env.MLFLOW_VERSION }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  build-mlflow-go:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      IMAGE_NAME: ${{ github.repository }}
      MLFLOW_GO_VERSION: 0.2.0
      CACHE_PATH: /tmp/.buildx-cache-mlflow-go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Cache Docker layers (MLflow-Go)
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-mlflow-go-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-mlflow-go-

      - name: Build and tag MLflow-Go image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            MLFLOW_BACKEND=go
            MLFLOW_GO_VERSION=${{ env.MLFLOW_GO_VERSION }}
          push: ${{ env.DOCKER_PUSH == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mlflow-go-${{ env.MLFLOW_GO_VERSION }}
          cache-from: type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}-new

      - name: Move cache (MLflow-Go)
        run: |
          rm -rf ${{ env.CACHE_PATH }}
          mv ${{ env.CACHE_PATH }}-new ${{ env.CACHE_PATH }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            MLFLOW_BACKEND=go
            MLFLOW_GO_VERSION=${{ env.MLFLOW_GO_VERSION }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST} 