name: Build Docker image

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.set-vars.outputs.registry }}
      docker-push: ${{ steps.set-vars.outputs.docker_push }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Set registry and push vars
        id: set-vars
        run: |
          if [ -n "${{ secrets.DOCKER_REGISTRY }}" ]; then
            echo "registry=${{ secrets.DOCKER_REGISTRY }}" >> $GITHUB_OUTPUT
          else
            echo "registry=ghcr.io" >> $GITHUB_OUTPUT
          fi
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ] && [ -n "${{ secrets.DOCKER_REGISTRY }}" ]; then
            echo "docker_push=true" >> $GITHUB_OUTPUT
          else
            echo "docker_push=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker registry (optional)
        if: ${{ steps.set-vars.outputs.docker_push == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ steps.set-vars.outputs.registry }}

  build-mlflow:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}
      MLFLOW_VERSION: 2.22.0
      REGISTRY: ${{ needs.prepare.outputs.registry }}
      DOCKER_PUSH: ${{ needs.prepare.outputs.docker-push }}
      CACHE_PATH: /tmp/.buildx-cache-mlflow
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Cache Docker layers (MLflow)
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-mlflow-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-mlflow-

      - name: Build and tag MLflow (Python) image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            MLFLOW_BACKEND=python
            MLFLOW_VERSION=${{ env.MLFLOW_VERSION }}
          push: ${{ env.DOCKER_PUSH == 'true' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mlflow-${{ env.MLFLOW_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}-new

      - name: Move cache (MLflow)
        run: |
          rm -rf ${{ env.CACHE_PATH }}
          mv ${{ env.CACHE_PATH }}-new ${{ env.CACHE_PATH }}

  build-mlflow-go:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}
      MLFLOW_GO_VERSION: 0.2.0
      REGISTRY: ${{ needs.prepare.outputs.registry }}
      DOCKER_PUSH: ${{ needs.prepare.outputs.docker-push }}
      CACHE_PATH: /tmp/.buildx-cache-mlflow-go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Cache Docker layers (MLflow-Go)
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-mlflow-go-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-mlflow-go-

      - name: Build and tag MLflow-Go image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            MLFLOW_BACKEND=go
            MLFLOW_GO_VERSION=${{ env.MLFLOW_GO_VERSION }}
          push: ${{ env.DOCKER_PUSH == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mlflow-go-${{ env.MLFLOW_GO_VERSION }}
          cache-from: type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}-new

      - name: Move cache (MLflow-Go)
        run: |
          rm -rf ${{ env.CACHE_PATH }}
          mv ${{ env.CACHE_PATH }}-new ${{ env.CACHE_PATH }} 